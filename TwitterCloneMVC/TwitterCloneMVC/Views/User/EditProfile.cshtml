@model Twitter.Models.User

@{
    Layout = null;
    var loggedInUser = (Twitter.Models.User)Session["User"];
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Profile</title>
    <link rel="icon" href="https://abs.twimg.com/favicons/twitter.ico" type="image/png" />
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>

<div class="min-h-screen bg-gray-100">
    <header class="bg-white shadow-sm">
        <div class="container mx-auto px-4 py-3 flex items-center justify-between">
            <div class="flex items-center">
                <img src="https://abs.twimg.com/favicons/twitter.ico" alt="Logo" width="32" height="32" />
            </div>
            <div class="flex items-center">
                <a href="/User/UserProfile" class="p-2 rounded-full hover:bg-gray-200"><strong>@loggedInUser.Fullname</strong></a>
                <img src="@loggedInUser.Pic" alt="Profile" class="profile-picture" style="width: 50px; height: 50px; object-fit: cover; border-radius: 50%;" />
            </div>
        </div>
    </header>

    <div class="container mx-auto px-4 py-8 flex">
        <!-- Left Sidebar (Same as Home Page Sidebar) -->
        <div class="w-full md:w-1/4 p-4 md:block">
            <div class="md:fixed">
                <nav class="flex flex-row md:flex-col justify-around md:justify-start">
                    <a href="/User/Dashboard" class="w-full flex items-center text-lg mb-2 justify-start text-gray-900 hover:bg-gray-200 p-2 rounded-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-house-fill" viewBox="0 0 16 16">
                            <path d="M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L8 2.207l6.646 6.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293z" />
                            <path d="m8 3.293 6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293z" />
                        </svg>
                        Home
                    </a>
                    <a href="/User/UserProfile" class="w-full flex items-center text-lg mb-2 justify-start text-gray-900 hover:bg-gray-200 p-2 rounded-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-fill" viewBox="0 0 16 16">
                            <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6" />
                        </svg>
                        Profile
                    </a>
                    <a href="/Tweet/UserTweets" class="w-full flex items-center text-lg mb-2 justify-start text-gray-900 hover:bg-gray-200 p-2 rounded-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-twitter" viewBox="0 0 16 16">
                            <path d="M5.026 15c6.038 0 9.341-5.003 9.341-9.334q.002-.211-.006-.422A6.7 6.7 0 0 0 16 3.542a6.7 6.7 0 0 1-1.889.518 3.3 3.3 0 0 0 1.447-1.817 6.5 6.5 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.32 9.32 0 0 1-6.767-3.429 3.29 3.29 0 0 0 1.018 4.382A3.3 3.3 0 0 1 .64 6.575v.045a3.29 3.29 0 0 0 2.632 3.218 3.2 3.2 0 0 1-.865.115 3 3 0 0 1-.614-.057 3.28 3.28 0 0 0 3.067 2.277A6.6 6.6 0 0 1 .78 13.58a6 6 0 0 1-.78-.045A9.34 9.34 0 0 0 5.026 15" />
                        </svg>
                        My Tweets
                    </a>


                    <a href="#" class="w-full flex items-center text-lg mb-2 justify-start text-gray-900 hover:bg-gray-200 p-2 rounded-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bell-fill" viewBox="0 0 16 16">
                            <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2m.995-14.901a1 1 0 1 0-1.99 0A5 5 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901" />
                        </svg>
                        Notifications
                    </a>

                    <a href="/Following/Followers?userId=@loggedInUser.UserId" class="w-full flex items-center text-lg mb-2 justify-start text-gray-900 hover:bg-gray-200 p-2 rounded-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-heart" viewBox="0 0 16 16">
                            <path d="M9 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0m-9 8c0 1 1 1 1 1h10s1 0 1-1-1-4-6-4-6 3-6 4m13.5-8.09c1.387-1.425 4.855 1.07 0 4.277-4.854-3.207-1.387-5.702 0-4.276Z" />
                        </svg>
                        Followers
                    </a>

                    <a href="/Following/FollowingUsers?userId=@loggedInUser.UserId" class="w-full flex items-center text-lg mb-2 justify-start text-gray-900 hover:bg-gray-200 p-2 rounded-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-plus-fill" viewBox="0 0 16 16">
                            <path d="M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6" />
                            <path fill-rule="evenodd" d="M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5" />
                        </svg>
                        Following
                    </a>
                </nav>
                
            </div>
        </div>

        <!-- Main Content: Edit Profile Form -->
        <main class="flex-grow max-w-2xl">
            <div class="bg-white rounded-lg shadow p-4 mb-8">
                <div class="relative mb-4">
                    <div class="bg-gray-200 h-48 w-full rounded-t-lg">
                        <!-- Cover Photo -->
                        <img src="~/Assets/CoverImage/Designer.png" alt="Cover" class="h-full w-full object-cover rounded-t-lg" />
                    </div>
                    <div class="absolute bottom-0 left-4">
                        <img src="@Model.Pic" alt="Profile" class="w-32 h-32 rounded-full border-4 border-white" />
                    </div>
                </div>
                <h2 class="text-2xl font-bold mb-4">Edit Profile</h2>

                @using (Html.BeginForm("Edit", "User", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="space-y-4">

                        <!-- Fullname -->
                        <div class="form-group">
                            <label for="Fullname" class="font-medium text-gray-700">Full Name</label>
                            @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control w-full p-2 rounded-md border-gray-300" } })
                            @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-red-500" })
                        </div>

                        <!-- Hidden -->
                        <div class="form-group">
                            <input type="hidden" id="UserName" name="UserName" value="@Model.UserName" class="form-control" />
                            <input type="hidden" id="UserId" name="UserId" value="@Model.UserId" class="form-control" />
                            <input type="hidden" id="JoiningDate" name="JoiningDate" value="@Model.JoiningDate" class="form-control" />
                            @*<input type="hidden" id="Pic" name="Pic" value="@Model.Pic" class="form-control" />*@
                        </div>
                        @*Profile Picture*@
                        <form method="post" enctype="multipart/form-data" action="/User/ProfilePic">
                            <label for="pic" class="block text-sm font-semibold text-gray-700">Upload Profile Picture</label>
                            <input type="file" id="file" name="file" accept="image/*" class="mt-2 block w-full text-sm text-gray-700 border border-gray-300 rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500" />
                            <button type="submit" class="mt-4 bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600">Upload</button>
                        </form>

                        <!-- Email -->
                        <div class="form-group">
                            <label for="Email" class="font-medium text-gray-700">Email</label>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control w-full p-2 rounded-md border-gray-300" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-red-500" })
                        </div>

                        <!-- Mobile -->
                        <div class="form-group">
                            <label for="Mobile" class="font-medium text-gray-700">Mobile</label>
                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control w-full p-2 rounded-md border-gray-300" } })
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-red-500" })
                        </div>

                        <!-- Bio -->
                        <div class="form-group">
                            <label for="Bio" class="font-medium text-gray-700">Bio</label>
                            @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control w-full p-2 rounded-md border-gray-300" } })
                            @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-red-500" })
                        </div>

                        <!-- Password (Optional) -->
                        <div class="form-group">
                            <label for="Password" class="font-medium text-gray-700">Password (Leave as is to keep current password)</label>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { id = "Password", type = "password", @class = "form-control w-full p-2 rounded-md border-gray-300" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-red-500" })
                        </div>

                        <div class="form-group">
                            <label for="ConfirmPassword" class="font-medium text-gray-700">Confirm Password</label>
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { id = "ConfirmPassword", type = "password", @class = "form-control w-full p-2 rounded-md border-gray-300" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-red-500" })
                        </div>

                        <!-- Show Password Checkbox -->
                        <div class="form-group">
                            <input type="checkbox" id="showPassword" class="mr-2" />
                            <label for="showPassword" class="font-medium text-gray-700">Show Password</label>
                        </div>

                        <div>
                            <button type="submit"
                                    class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                Save Changes
                            </button>
                        </div>
                    </div>
                }
            </div>
        </main>
    </div>
</div>

<script>
    // JavaScript to toggle password visibility
    document.getElementById('showPassword').addEventListener('change', function () {
        var passwordField = document.getElementById('Password');
        var confirmPasswordField = document.getElementById('ConfirmPassword');
        if (this.checked) {
            passwordField.type = 'text';
            confirmPasswordField.type = 'text';
        } else {
            passwordField.type = 'password';
            confirmPasswordField.type = 'password';
        }
    });
</script>

